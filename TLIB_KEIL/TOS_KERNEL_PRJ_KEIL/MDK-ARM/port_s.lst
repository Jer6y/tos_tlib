


ARM Macro Assembler    Page 1 


    1 00000000                 EXPORT           port_int_disable
    2 00000000                 EXPORT           port_int_enable
    3 00000000         
    4 00000000                 EXPORT           port_cpsr_save
    5 00000000                 EXPORT           port_cpsr_restore
    6 00000000         
    7 00000000                 EXPORT           port_sched_start
    8 00000000                 EXPORT           port_context_switch
    9 00000000                 EXPORT           port_irq_context_switch
   10 00000000         
   11 00000000                 EXPORT           port_clz
   12 00000000         
   13 00000000                 EXPORT           PendSV_Handler
   14 00000000         
   15 00000000                 IMPORT           k_curr_task
   16 00000000                 IMPORT           k_next_task
   17 00000000         
   18 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   19 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04
   20 00000000 E000ED22 
                       NVIC_SYSPRI14
                               EQU              0xE000ED22
   21 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               EQU              0xFF
   22 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000
   23 00000000         
   24 00000000         
   25 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000                 THUMB
   27 00000000                 REQUIRE8
   28 00000000                 PRESERVE8
   29 00000000         
   30 00000000         
   31 00000000                 GLOBAL           port_int_disable
   32 00000000         port_int_disable
   33 00000000 B672            CPSID            I
   34 00000002 4770            BX               LR
   35 00000004         
   36 00000004         
   37 00000004                 GLOBAL           port_int_enable
   38 00000004         port_int_enable
   39 00000004 B662            CPSIE            I
   40 00000006 4770            BX               LR
   41 00000008         
   42 00000008         
   43 00000008                 GLOBAL           port_cpsr_save
   44 00000008         port_cpsr_save
   45 00000008 F3EF 8010       MRS              R0, PRIMASK
   46 0000000C B672            CPSID            I
   47 0000000E 4770            BX               LR
   48 00000010         



ARM Macro Assembler    Page 2 


   49 00000010         
   50 00000010                 GLOBAL           port_cpsr_restore
   51 00000010         port_cpsr_restore
   52 00000010 F380 8810       MSR              PRIMASK, R0
   53 00000014 4770            BX               LR
   54 00000016         
   55 00000016         
   56 00000016                 GLOBAL           port_clz
   57 00000016         port_clz
   58 00000016 FAB0 F080       CLZ              R0, R0
   59 0000001A 4770            BX               LR
   60 0000001C         
   61 0000001C         
   62 0000001C                 GLOBAL           port_sched_start
   63 0000001C         port_sched_start
   64 0000001C B672            CPSID            I
   65 0000001E         
   66 0000001E         ; set pendsv priority lowest
   67 0000001E         ; otherwise trigger pendsv in port_irq_context_switch wi
                       ll cause a context switch in irq
   68 0000001E         ; that would be a disaster
   69 0000001E F64E 5022 
              F2CE 0000        MOV32            R0, NVIC_SYSPRI14
   70 00000026 F240 01FF 
              F2C0 0100        MOV32            R1, NVIC_PENDSV_PRI
   71 0000002E 7001            STRB             R1, [R0]
   72 00000030         
   73 00000030 485F            LDR              R0, =SCB_VTOR
   74 00000032 6800            LDR              R0, [R0]
   75 00000034 6800            LDR              R0, [R0]
   76 00000036 F380 8808       MSR              MSP, R0
   77 0000003A         
   78 0000003A         ; k_curr_task = k_next_task
   79 0000003A F240 0000 
              F2C0 0000        MOV32            R0, k_curr_task
   80 00000042 F240 0100 
              F2C0 0100        MOV32            R1, k_next_task
   81 0000004A 680A            LDR              R2, [R1]
   82 0000004C 6002            STR              R2, [R0]
   83 0000004E         
   84 0000004E 2000            MOVS             R0, #0
   85 00000050 F380 8809       MSR              PSP, R0
   86 00000054         
   87 00000054 4857            LDR              R0, =NVIC_INT_CTRL
   88 00000056 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   89 0000005A 6001            STR              R1, [R0]
   90 0000005C         
   91 0000005C B662            CPSIE            I
   92 0000005E 4770            BX               LR
   93 00000060         
   94 00000060                 GLOBAL           port_context_switch
   95 00000060         port_context_switch
   96 00000060 4854            LDR              R0, =NVIC_INT_CTRL
   97 00000062 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   98 00000066 6001            STR              R1, [R0]
   99 00000068 4770            BX               LR
  100 0000006A         
  101 0000006A         
  102 0000006A                 GLOBAL           port_irq_context_switch



ARM Macro Assembler    Page 3 


  103 0000006A         port_irq_context_switch
  104 0000006A 4852            LDR              R0, =NVIC_INT_CTRL
  105 0000006C F04F 5180       LDR              R1, =NVIC_PENDSVSET
  106 00000070 6001            STR              R1, [R0]
  107 00000072 4770            BX               LR
  108 00000074         
  109 00000074         
  110 00000074                 GLOBAL           PendSV_Handler
  111 00000074         PendSV_Handler
  112 00000074 B672            CPSID            I
  113 00000076 F3EF 8009       MRS              R0, PSP
  114 0000007A B160            CBZ              R0, PendSVHandler_nosave
  115 0000007C         
  116 0000007C         _context_save
  117 0000007C         ; R0-R3, R12, LR, PC, xPSR is saved automatically here
  118 0000007C                 IF               {FPU} != "SoftVFP"
  127                          ENDIF
  128 0000007C         
  129 0000007C         
  130 0000007C 3820            SUBS             R0, R0, #0x20
  131 0000007E E880 0FF0       STM              R0, {R4 - R11}
  132 00000082 494D            LDR              R1, =k_curr_task
  133 00000084 6809            LDR              R1, [R1]
  134 00000086 684A            LDR              R2, [R1,#0x4]
  135 00000088 B112            CBZ              R2, KTD_SAVE
  136 0000008A 7A0A            LDRB             R2, [R1,#0x8]
  137 0000008C B102            CBZ              R2, UTD_USAVE
  138 0000008E E001            B                UTD_KSAVE
  139 00000090         UTD_USAVE
  140 00000090         KTD_SAVE
  141 00000090 6008            STR              R0, [R1]
  142 00000092 E000            B                PendSVHandler_nosave
  143 00000094         UTD_KSAVE
  144 00000094 6048            STR              R0, [R1,#0x4]
  145 00000096         PendSVHandler_nosave
  146 00000096 4848            LDR              R0, =k_curr_task
  147 00000098 4948            LDR              R1, =k_next_task
  148 0000009A 680A            LDR              R2, [R1]
  149 0000009C 6002            STR              R2, [R0]
  150 0000009E         
  151 0000009E         ;;;TLIB START
  152 0000009E 6850            LDR              R0, [R2,#0x4]
  153 000000A0 B100            CBZ              R0, Load_Kernel_Thread
  154 000000A2 E005            B                Load_User_Thread
  155 000000A4         Load_Kernel_Thread
  156 000000A4 F3EF 8014       MRS              R0, CONTROL
  157 000000A8 F020 0001       BIC              R0,R0,#0x1
  158 000000AC 6810            LDR              R0,[R2]
  159 000000AE E021            B                Load
  160 000000B0         Load_User_Thread
  161 000000B0 7A50            LDRB             R0, [R2,#0x9]
  162 000000B2 B160            CBZ              R0, UTD_KUJG
  163 000000B4         Clear_SWtch_Pend
  164 000000B4 F04F 0000       LDR              R0, =0x0
  165 000000B8 7250            STRB             R0, [R2,#0x9]
  166 000000BA 7A10            LDRB             R0, [R2,#0x8]
  167 000000BC B118            CBZ              R0,  LD_1
  168 000000BE         LD_0
  169 000000BE F04F 0000       LDR              R0, =0x0



ARM Macro Assembler    Page 4 


  170 000000C2 7210            STRB             R0, [R2,#0x8]
  171 000000C4 E003            B                UTD_KUJG
  172 000000C6         LD_1
  173 000000C6 F04F 0001       LDR              R0, =0x1
  174 000000CA 7210            STRB             R0, [R2,#0x8]
  175 000000CC E7FF            B                UTD_KUJG
  176 000000CE         UTD_KUJG
  177 000000CE 7A10            LDRB             R0, [R2,#0x8]
  178 000000D0 B140            CBZ              R0, Load_UTD_Usr
  179 000000D2 E7FF            B                Load_UTD_Ker
  180 000000D4         Load_UTD_Ker
  181 000000D4 F3EF 8014       MRS              R0, CONTROL
  182 000000D8 F020 0001       BIC              R0,R0,#0x1
  183 000000DC F380 8814       MSR              CONTROL,R0
  184 000000E0 6850            LDR              R0, [R2,#0x4]
  185 000000E2 E007            B                Load
  186 000000E4         Load_UTD_Usr
  187 000000E4 F3EF 8014       MRS              R0, CONTROL
  188 000000E8 F040 0001       ORR              R0,R0,#0x1
  189 000000EC F380 8814       MSR              CONTROL,R0
  190 000000F0 6810            LDR              R0, [R2]
  191 000000F2 E7FF            B                Load
  192 000000F4         
  193 000000F4         Load
  194 000000F4 E890 0FF0       LDM              R0, {R4 - R11}
  195 000000F8 3020            ADDS             R0, R0, #0x20
  196 000000FA         
  197 000000FA                 IF               {FPU} != "SoftVFP"
  204                          ENDIF
  205 000000FA         
  206 000000FA F380 8809       MSR              PSP, R0
  207 000000FE F04E 0E04       ORR              LR, LR, #0x04
  208 00000102 B662            CPSIE            I
  209 00000104 4770            BX               LR
  210 00000106         
  211 00000106         
  212 00000106         
  213 00000106         
  214 00000106                 GLOBAL           SVC_Handler
  215 00000106                 IMPORT           cpu_tlib_kernel_stk_init
  216 00000106                 IMPORT           syscall_kernel_knl
  217 00000106         ; must use psp for user msp for kernel 
  218 00000106         ; or will  destory
  219 00000106         ; R0 调用号 R1 结构体地址
  220 00000106         ; R0 返回值
  221 00000106         SVC_Handler
  222 00000106 B672            CPSID            I
  223 00000108         ; judge for Handler_Mode
  224 00000108 4673            MOV              R3,LR
  225 0000010A F06F 020E       LDR              R2,=0xFFFFFFF1
  226 0000010E EBA3 0302       SUB              R3,R3,R2
  227 00000112 B17B            CBZ              R3,CAL_FRM_HANDLER
  228 00000114 4673            MOV              R3,LR
  229 00000116 F06F 021E       LDR              R2,=0xFFFFFFE1
  230 0000011A EBA3 0302       SUB              R3,R3,R2
  231 0000011E B14B            CBZ              R3,CAL_FRM_HANDLER
  232 00000120         
  233 00000120 F3EF 8309       MRS              R3,PSP
  234 00000124         



ARM Macro Assembler    Page 5 


  235 00000124         ; R0-R3, R12, LR, PC, xPSR is saved automatically here
  236 00000124                 IF               {FPU} != "SoftVFP"
  245                          ENDIF
  246 00000124         
  247 00000124         
  248 00000124 3B20            SUBS             R3, R3, #0x20
  249 00000126 E883 0FF0       STM              R3, {R4 - R11}
  250 0000012A 4A23            LDR              R2, =k_curr_task
  251 0000012C 6812            LDR              R2, [R2]
  252 0000012E         
  253 0000012E         ;;;TLIB START
  254 0000012E 6854            LDR              R4, [R2,#0x4]
  255 00000130 B154            CBZ              R4, KTD
  256 00000132 E022            B                UTD
  257 00000134         CAL_FRM_HANDLER
  258 00000134 B662            CPSIE            I
  259 00000136 B500            PUSH             {LR}
  260 00000138 F7FF FFFE       BL               syscall_kernel_knl
  261 0000013C F85D EB04       POP              {LR}
  262 00000140         
  263 00000140 F3EF 8108       MRS              R1,MSP
  264 00000144 6008            STR              R0, [R1]
  265 00000146         
  266 00000146 4770            BX               LR
  267 00000148         KTD
  268 00000148 6013            STR              R3, [R2]
  269 0000014A B500            PUSH             {LR}
  270 0000014C F7FF FFFE       BL               syscall_kernel_knl
  271 00000150 F85D EB04       POP              {LR}
  272 00000154 4918            LDR              R1, =k_curr_task
  273 00000156 6809            LDR              R1, [R1]
  274 00000158 6809            LDR              R1, [R1]
  275 0000015A 6208            STR              R0, [R1,#0x20]
  276 0000015C         
  277 0000015C 4916            LDR              R1, =k_curr_task
  278 0000015E 4A17            LDR              R2, =k_next_task
  279 00000160 6813            LDR              R3, [R2]
  280 00000162 600B            STR              R3, [R1]
  281 00000164 6819            LDR              R1, [R3]
  282 00000166         
  283 00000166 E891 0FF0       LDM              R1, {R4 - R11}
  284 0000016A 3120            ADDS             R1, R1, #0x20
  285 0000016C         
  286 0000016C                 IF               {FPU} != "SoftVFP"
  293                          ENDIF
  294 0000016C         
  295 0000016C F381 8809       MSR              PSP, R1
  296 00000170 6008            STR              R0,[R1]
  297 00000172 F04E 0E04       ORR              LR, LR, #0x04
  298 00000176 B662            CPSIE            I
  299 00000178 4770            BX               LR
  300 0000017A         UTD
  301 0000017A 6013            STR              R3, [R2]
  302 0000017C F04F 0301       LDR              R3, =0x1
  303 00000180 7253            STRB             R3, [R2,#0x9]
  304 00000182         
  305 00000182 B500            PUSH             {LR}
  306 00000184 F7FF FFFE       BL               cpu_tlib_kernel_stk_init
  307 00000188 F85D EB04       POP              {LR}



ARM Macro Assembler    Page 6 


  308 0000018C         
  309 0000018C B500            PUSH             {LR}
  310 0000018E F7FF FFFE       BL               port_context_switch
  311 00000192 F85D EB04       POP              {LR}
  312 00000196         
  313 00000196         
  314 00000196 4908            LDR              R1, =k_curr_task
  315 00000198 6809            LDR              R1, [R1]
  316 0000019A 6809            LDR              R1, [R1]
  317 0000019C         
  318 0000019C E891 0FF0       LDM              R1, {R4 - R11}
  319 000001A0 3120            ADDS             R1, R1, #0x20
  320 000001A2         
  321 000001A2                 IF               {FPU} != "SoftVFP"
  328                          ENDIF
  329 000001A2         
  330 000001A2 F381 8809       MSR              PSP, R1
  331 000001A6 F04E 0E04       ORR              LR, LR, #0x04
  332 000001AA         
  333 000001AA B662            CPSIE            I
  334 000001AC         
  335 000001AC 4770            BX               LR
  336 000001AE 00 00           ALIGN
  337 000001B0                 END
              E000ED08 
              E000ED04 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --fpu=SoftVFP
 --depend=tos_tlib_kernel\port_s.d -otos_tlib_kernel\port_s.o -I.\RTE\_tos_tlib
_kernel -ID:\Keil5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil5\ARM\PACK\K
eil\STM32WLxx_DFP\1.1.0\Drivers\CMSIS\Device\ST\STM32WLxx\Include --predefine="
__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine="_RTE_ 
SETA 1" --predefine="STM32WLE5xx SETA 1" --list=port_s.lst ..\TOS\ARCH\port_s.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file ..\TOS\ARCH\port_s.S
   Uses
      None
Comment: .text unused
CAL_FRM_HANDLER 00000134

Symbol: CAL_FRM_HANDLER
   Definitions
      At line 257 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 227 in file ..\TOS\ARCH\port_s.S
      At line 231 in file ..\TOS\ARCH\port_s.S

Clear_SWtch_Pend 000000B4

Symbol: Clear_SWtch_Pend
   Definitions
      At line 163 in file ..\TOS\ARCH\port_s.S
   Uses
      None
Comment: Clear_SWtch_Pend unused
KTD 00000148

Symbol: KTD
   Definitions
      At line 267 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 255 in file ..\TOS\ARCH\port_s.S
Comment: KTD used once
KTD_SAVE 00000090

Symbol: KTD_SAVE
   Definitions
      At line 140 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 135 in file ..\TOS\ARCH\port_s.S
Comment: KTD_SAVE used once
LD_0 000000BE

Symbol: LD_0
   Definitions
      At line 168 in file ..\TOS\ARCH\port_s.S
   Uses
      None
Comment: LD_0 unused
LD_1 000000C6

Symbol: LD_1
   Definitions
      At line 172 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 167 in file ..\TOS\ARCH\port_s.S
Comment: LD_1 used once
Load 000000F4




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Load
   Definitions
      At line 193 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 159 in file ..\TOS\ARCH\port_s.S
      At line 185 in file ..\TOS\ARCH\port_s.S
      At line 191 in file ..\TOS\ARCH\port_s.S

Load_Kernel_Thread 000000A4

Symbol: Load_Kernel_Thread
   Definitions
      At line 155 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 153 in file ..\TOS\ARCH\port_s.S
Comment: Load_Kernel_Thread used once
Load_UTD_Ker 000000D4

Symbol: Load_UTD_Ker
   Definitions
      At line 180 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 179 in file ..\TOS\ARCH\port_s.S
Comment: Load_UTD_Ker used once
Load_UTD_Usr 000000E4

Symbol: Load_UTD_Usr
   Definitions
      At line 186 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 178 in file ..\TOS\ARCH\port_s.S
Comment: Load_UTD_Usr used once
Load_User_Thread 000000B0

Symbol: Load_User_Thread
   Definitions
      At line 160 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 154 in file ..\TOS\ARCH\port_s.S
Comment: Load_User_Thread used once
PendSVHandler_nosave 00000096

Symbol: PendSVHandler_nosave
   Definitions
      At line 145 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 114 in file ..\TOS\ARCH\port_s.S
      At line 142 in file ..\TOS\ARCH\port_s.S

PendSV_Handler 00000074

Symbol: PendSV_Handler
   Definitions
      At line 111 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 13 in file ..\TOS\ARCH\port_s.S
      At line 110 in file ..\TOS\ARCH\port_s.S

SVC_Handler 00000106



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: SVC_Handler
   Definitions
      At line 221 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 214 in file ..\TOS\ARCH\port_s.S
Comment: SVC_Handler used once
UTD 0000017A

Symbol: UTD
   Definitions
      At line 300 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 256 in file ..\TOS\ARCH\port_s.S
Comment: UTD used once
UTD_KSAVE 00000094

Symbol: UTD_KSAVE
   Definitions
      At line 143 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 138 in file ..\TOS\ARCH\port_s.S
Comment: UTD_KSAVE used once
UTD_KUJG 000000CE

Symbol: UTD_KUJG
   Definitions
      At line 176 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 162 in file ..\TOS\ARCH\port_s.S
      At line 171 in file ..\TOS\ARCH\port_s.S
      At line 175 in file ..\TOS\ARCH\port_s.S

UTD_USAVE 00000090

Symbol: UTD_USAVE
   Definitions
      At line 139 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 137 in file ..\TOS\ARCH\port_s.S
Comment: UTD_USAVE used once
_context_save 0000007C

Symbol: _context_save
   Definitions
      At line 116 in file ..\TOS\ARCH\port_s.S
   Uses
      None
Comment: _context_save unused
port_clz 00000016

Symbol: port_clz
   Definitions
      At line 57 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 11 in file ..\TOS\ARCH\port_s.S
      At line 56 in file ..\TOS\ARCH\port_s.S

port_context_switch 00000060



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: port_context_switch
   Definitions
      At line 95 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 8 in file ..\TOS\ARCH\port_s.S
      At line 94 in file ..\TOS\ARCH\port_s.S
      At line 310 in file ..\TOS\ARCH\port_s.S

port_cpsr_restore 00000010

Symbol: port_cpsr_restore
   Definitions
      At line 51 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 5 in file ..\TOS\ARCH\port_s.S
      At line 50 in file ..\TOS\ARCH\port_s.S

port_cpsr_save 00000008

Symbol: port_cpsr_save
   Definitions
      At line 44 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 4 in file ..\TOS\ARCH\port_s.S
      At line 43 in file ..\TOS\ARCH\port_s.S

port_int_disable 00000000

Symbol: port_int_disable
   Definitions
      At line 32 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 1 in file ..\TOS\ARCH\port_s.S
      At line 31 in file ..\TOS\ARCH\port_s.S

port_int_enable 00000004

Symbol: port_int_enable
   Definitions
      At line 38 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 2 in file ..\TOS\ARCH\port_s.S
      At line 37 in file ..\TOS\ARCH\port_s.S

port_irq_context_switch 0000006A

Symbol: port_irq_context_switch
   Definitions
      At line 103 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 9 in file ..\TOS\ARCH\port_s.S
      At line 102 in file ..\TOS\ARCH\port_s.S

port_sched_start 0000001C

Symbol: port_sched_start
   Definitions
      At line 63 in file ..\TOS\ARCH\port_s.S



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 7 in file ..\TOS\ARCH\port_s.S
      At line 62 in file ..\TOS\ARCH\port_s.S

28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 19 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 87 in file ..\TOS\ARCH\port_s.S
      At line 96 in file ..\TOS\ARCH\port_s.S
      At line 104 in file ..\TOS\ARCH\port_s.S

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 22 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 88 in file ..\TOS\ARCH\port_s.S
      At line 97 in file ..\TOS\ARCH\port_s.S
      At line 105 in file ..\TOS\ARCH\port_s.S

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 21 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 70 in file ..\TOS\ARCH\port_s.S
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 20 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 69 in file ..\TOS\ARCH\port_s.S
Comment: NVIC_SYSPRI14 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 18 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 73 in file ..\TOS\ARCH\port_s.S
Comment: SCB_VTOR used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

cpu_tlib_kernel_stk_init 00000000

Symbol: cpu_tlib_kernel_stk_init
   Definitions
      At line 215 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 306 in file ..\TOS\ARCH\port_s.S
Comment: cpu_tlib_kernel_stk_init used once
k_curr_task 00000000

Symbol: k_curr_task
   Definitions
      At line 15 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 79 in file ..\TOS\ARCH\port_s.S
      At line 132 in file ..\TOS\ARCH\port_s.S
      At line 146 in file ..\TOS\ARCH\port_s.S
      At line 250 in file ..\TOS\ARCH\port_s.S
      At line 272 in file ..\TOS\ARCH\port_s.S
      At line 277 in file ..\TOS\ARCH\port_s.S
      At line 314 in file ..\TOS\ARCH\port_s.S

k_next_task 00000000

Symbol: k_next_task
   Definitions
      At line 16 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 80 in file ..\TOS\ARCH\port_s.S
      At line 147 in file ..\TOS\ARCH\port_s.S
      At line 278 in file ..\TOS\ARCH\port_s.S

syscall_kernel_knl 00000000

Symbol: syscall_kernel_knl
   Definitions
      At line 216 in file ..\TOS\ARCH\port_s.S
   Uses
      At line 260 in file ..\TOS\ARCH\port_s.S
      At line 270 in file ..\TOS\ARCH\port_s.S

4 symbols
373 symbols in table
